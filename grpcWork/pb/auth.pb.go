// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

// package
// as package like ./pb

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CalcRequest (params)
type AuthRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// CalcReply (result)
type IsAuth struct {
	Result               bool     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsAuth) Reset()         { *m = IsAuth{} }
func (m *IsAuth) String() string { return proto.CompactTextString(m) }
func (*IsAuth) ProtoMessage()    {}
func (*IsAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *IsAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsAuth.Unmarshal(m, b)
}
func (m *IsAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsAuth.Marshal(b, m, deterministic)
}
func (m *IsAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsAuth.Merge(m, src)
}
func (m *IsAuth) XXX_Size() int {
	return xxx_messageInfo_IsAuth.Size(m)
}
func (m *IsAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_IsAuth.DiscardUnknown(m)
}

var xxx_messageInfo_IsAuth proto.InternalMessageInfo

func (m *IsAuth) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "pb.AuthRequest")
	proto.RegisterType((*IsAuth)(nil), "pb.IsAuth")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 150 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x2c, 0x2d, 0xc9,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x72, 0xe5, 0xe2, 0x76, 0x2c,
	0x2d, 0xc9, 0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe2, 0xe2, 0x28, 0x2d, 0x4e,
	0x2d, 0xca, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x41, 0x72,
	0x05, 0x89, 0xc5, 0xc5, 0xe5, 0xf9, 0x45, 0x29, 0x12, 0x4c, 0x10, 0x39, 0x18, 0x5f, 0x49, 0x81,
	0x8b, 0xcd, 0xb3, 0x18, 0x64, 0x90, 0x90, 0x18, 0x17, 0x5b, 0x51, 0x6a, 0x71, 0x69, 0x4e, 0x09,
	0x58, 0x3f, 0x47, 0x10, 0x94, 0x67, 0x64, 0xc8, 0xc5, 0x11, 0x5a, 0x9c, 0x5a, 0x04, 0x56, 0xa3,
	0xca, 0xc5, 0x02, 0xa6, 0xf9, 0xf5, 0x0a, 0x92, 0xf4, 0x90, 0xac, 0x97, 0xe2, 0x02, 0x09, 0x40,
	0x0c, 0x52, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xd3, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x66, 0xfc,
	0x2a, 0x00, 0xb4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserAuthClient is the client API for UserAuth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserAuthClient interface {
	// Plus service
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*IsAuth, error)
}

type userAuthClient struct {
	cc *grpc.ClientConn
}

func NewUserAuthClient(cc *grpc.ClientConn) UserAuthClient {
	return &userAuthClient{cc}
}

func (c *userAuthClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*IsAuth, error) {
	out := new(IsAuth)
	err := c.cc.Invoke(ctx, "/pb.UserAuth/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserAuthServer is the server API for UserAuth service.
type UserAuthServer interface {
	// Plus service
	Auth(context.Context, *AuthRequest) (*IsAuth, error)
}

// UnimplementedUserAuthServer can be embedded to have forward compatible implementations.
type UnimplementedUserAuthServer struct {
}

func (*UnimplementedUserAuthServer) Auth(ctx context.Context, req *AuthRequest) (*IsAuth, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}

func RegisterUserAuthServer(s *grpc.Server, srv UserAuthServer) {
	s.RegisterService(&_UserAuth_serviceDesc, srv)
}

func _UserAuth_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAuthServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserAuth/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAuthServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserAuth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserAuth",
	HandlerType: (*UserAuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Auth",
			Handler:    _UserAuth_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
